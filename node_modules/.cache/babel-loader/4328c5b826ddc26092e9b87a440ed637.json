{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { blue, pink, purple, grey } from '@material-ui/core/colors';\nimport useLocalStorageState from '../Hooks/useLocalStorageState';\n/*\nfunction myTheme(themeName = 'light') {\n */\n\n/* const themeObject = {\n\n  palette: {\n    primary: {\n      light: blue[800],\n      main: blue[500],\n      dark: blue[500],\n    },\n    secondary: {\n      light: pink[800],\n      main: pink[500],\n      dark: pink[500],\n    },\n\n  }\n}; */\n\nconst lightTheme = {\n  palette: {\n    primary: {\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n      main: '#FFFFFF'\n    },\n    secondary: {\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n      main: '#FFFFFF'\n    },\n    type: 'light',\n    background: {\n      paper: 'linear-gradient(130deg, #96bb7c 80%, #184d47 10%)'\n    }\n  }\n};\nconst darkTheme = {\n  palette: {\n    primary: {\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n      main: '#FFFFFF'\n    },\n    secondary: {\n      dark: '#FFFFFF',\n      light: '#FFFFFF',\n      main: '#FFFFFF'\n    },\n    type: 'dark',\n    background: {\n      paper: 'linear-gradient(130deg, #0c2623 80%, #96bb7c 10%)'\n    }\n  }\n};\nconst MatchMedia = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches; // console.log('MatchMEDIA: THE PREFFERED MODE IS DARK', MatchMedia);\n\nlet initialTheme = '';\nconst preferredTheme = MatchMedia === true ? initialTheme = darkTheme : initialTheme = lightTheme;\nconsole.log('this is the preferredTheme', preferredTheme);\nlet themeObject = preferredTheme;\nconsole.log('this is the ThemeObject', themeObject);\n/* {\n  PaletteType === 'light' ? (\n    themeObject = lightTheme\n  ) : (\n    themeObject = darkTheme\n  );\n}\n */\n\n/* console.log(themeObject); */\n\n/* themeConfig = responsiveFontSizes(themeConfig); */\n\nconst useDarkmode = () => {\n  const [theme, setTheme] = useState(themeObject);\n  console.log('THIS IS INSIDE USEDARKMODE');\n\n  const toggleDarkMode = () => {\n    console.log('You called  ToggleDarkMode');\n    console.log('THIS IS THEME.TYPE', themeObject);\n    const updatedTheme = { ...themeObject,\n      type: themeObject === darkTheme ? themeObject = lightTheme : themeObject = darkTheme\n    };\n    setTheme(updatedTheme);\n    console.log('THIS IS THEME', theme);\n  };\n\n  return [theme, toggleDarkMode];\n};\n/*    return theme;\n    }\n    */\n\n\nexport { themeObject, useDarkmode };\n/*\n\nhttps://egghead.io/lessons/react-create-a-react-hook-to-toggle-between-light-and-dark-mode-inside-of-material-ui-themes */","map":{"version":3,"sources":["/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/MUIthemeExample/myTheme.jsx"],"names":["createMuiTheme","responsiveFontSizes","React","useState","useEffect","blue","pink","purple","grey","useLocalStorageState","lightTheme","palette","primary","dark","light","main","secondary","type","background","paper","darkTheme","MatchMedia","window","matchMedia","matches","initialTheme","preferredTheme","console","log","themeObject","useDarkmode","theme","setTheme","toggleDarkMode","updatedTheme"],"mappings":"AAAA;AAEA,SAASA,cAAT,EAAyBC,mBAAzB,QAAoD,mBAApD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,IADF,EACQC,IADR,EACcC,MADd,EACsBC,IADtB,QAEO,0BAFP;AAGA,OAAOC,oBAAP,MAAiC,+BAAjC;AAEA;;;;AAIA;;;;;;;;;;;;;;;;;AAiBA,MAAMC,UAAU,GAAG;AAEjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,SADC;AAGPC,MAAAA,KAAK,EAAE,SAHA;AAKPC,MAAAA,IAAI,EAAE;AALC,KADF;AAQPC,IAAAA,SAAS,EAAE;AACTH,MAAAA,IAAI,EAAE,SADG;AAGTC,MAAAA,KAAK,EAAE,SAHE;AAKTC,MAAAA,IAAI,EAAE;AALG,KARJ;AAePE,IAAAA,IAAI,EAAE,OAfC;AAgBPC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AADG;AAhBL;AAFQ,CAAnB;AAyBA,MAAMC,SAAS,GAAG;AAEhBT,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,SADC;AAGPC,MAAAA,KAAK,EAAE,SAHA;AAKPC,MAAAA,IAAI,EAAE;AALC,KADF;AAQPC,IAAAA,SAAS,EAAE;AACTH,MAAAA,IAAI,EAAE,SADG;AAGTC,MAAAA,KAAK,EAAE,SAHE;AAKTC,MAAAA,IAAI,EAAE;AALG,KARJ;AAePE,IAAAA,IAAI,EAAE,MAfC;AAgBPC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AADG;AAhBL;AAFO,CAAlB;AAwBA,MAAME,UAAU,GAAGC,MAAM,CAACC,UAAP,IACJD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OADjE,C,CAEE;;AAEF,IAAIC,YAAY,GAAG,EAAnB;AACA,MAAMC,cAAc,GAAGL,UAAU,KAAK,IAAf,GAAsBI,YAAY,GAAGL,SAArC,GAAiDK,YAAY,GAAGf,UAAvF;AACAiB,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,cAA1C;AAEA,IAAIG,WAAW,GAAGH,cAAlB;AACAC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,WAAvC;AAEA;;;;;;;;;AAQA;;AACA;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC0B,WAAD,CAAlC;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AACA,QAAMK,cAAc,GAAG,MAAM;AAC3BN,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,WAAlC;AACA,UAAMK,YAAY,GAAG,EACnB,GAAGL,WADgB;AAEnBZ,MAAAA,IAAI,EAAEY,WAAW,KAAKT,SAAhB,GAA4BS,WAAW,GAAGnB,UAA1C,GAAuDmB,WAAW,GAAGT;AAFxD,KAArB;AAIAY,IAAAA,QAAQ,CAACE,YAAD,CAAR;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACD,GATD;;AAUA,SAAO,CAACA,KAAD,EAAQE,cAAR,CAAP;AACD,CAfD;AAiBA;;;;;AAGA,SAASJ,WAAT,EAAsBC,WAAtB;AACA","sourcesContent":["/* eslint-disable no-unused-vars */\n\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport {\n  blue, pink, purple, grey,\n} from '@material-ui/core/colors';\nimport useLocalStorageState from '../Hooks/useLocalStorageState';\n\n/*\nfunction myTheme(themeName = 'light') {\n */\n\n/* const themeObject = {\n\n  palette: {\n    primary: {\n      light: blue[800],\n      main: blue[500],\n      dark: blue[500],\n    },\n    secondary: {\n      light: pink[800],\n      main: pink[500],\n      dark: pink[500],\n    },\n\n  }\n}; */\n\nconst lightTheme = {\n\n  palette: {\n    primary: {\n      dark: '#FFFFFF',\n\n      light: '#FFFFFF',\n\n      main: '#FFFFFF',\n    },\n    secondary: {\n      dark: '#FFFFFF',\n\n      light: '#FFFFFF',\n\n      main: '#FFFFFF',\n    },\n    type: 'light',\n    background: {\n      paper: 'linear-gradient(130deg, #96bb7c 80%, #184d47 10%)',\n\n    },\n  },\n};\n\nconst darkTheme = {\n\n  palette: {\n    primary: {\n      dark: '#FFFFFF',\n\n      light: '#FFFFFF',\n\n      main: '#FFFFFF',\n    },\n    secondary: {\n      dark: '#FFFFFF',\n\n      light: '#FFFFFF',\n\n      main: '#FFFFFF',\n    },\n    type: 'dark',\n    background: {\n      paper: 'linear-gradient(130deg, #0c2623 80%, #96bb7c 10%)',\n    },\n  },\n};\n\nconst MatchMedia = window.matchMedia\n            && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  // console.log('MatchMEDIA: THE PREFFERED MODE IS DARK', MatchMedia);\n\nlet initialTheme = '';\nconst preferredTheme = MatchMedia === true ? initialTheme = darkTheme : initialTheme = lightTheme;\nconsole.log('this is the preferredTheme', preferredTheme);\n\nlet themeObject = preferredTheme;\nconsole.log('this is the ThemeObject', themeObject);\n\n/* {\n  PaletteType === 'light' ? (\n    themeObject = lightTheme\n  ) : (\n    themeObject = darkTheme\n  );\n}\n */\n/* console.log(themeObject); */\n/* themeConfig = responsiveFontSizes(themeConfig); */\n\nconst useDarkmode = () => {\n  const [theme, setTheme] = useState(themeObject);\n\n  console.log('THIS IS INSIDE USEDARKMODE');\n  const toggleDarkMode = () => {\n    console.log('You called  ToggleDarkMode');\n    console.log('THIS IS THEME.TYPE', themeObject);\n    const updatedTheme = {\n      ...themeObject,\n      type: themeObject === darkTheme ? themeObject = lightTheme : themeObject = darkTheme,\n    };\n    setTheme(updatedTheme);\n    console.log('THIS IS THEME', theme);\n  };\n  return [theme, toggleDarkMode];\n};\n\n/*    return theme;\n    }\n    */\nexport { themeObject, useDarkmode };\n/*\n\nhttps://egghead.io/lessons/react-create-a-react-hook-to-toggle-between-light-and-dark-mode-inside-of-material-ui-themes */\n"]},"metadata":{},"sourceType":"module"}