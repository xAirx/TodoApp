{"ast":null,"code":"var _jsxFileName = \"/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/TodoList.jsx\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Todo from './Todos';\n\nfunction TodoList({\n  todos,\n  removeTodo,\n  toggleTodo,\n  editTodo\n}) {\n  // here we are overwriting everything in setTodos, we are going to pass in the existing todos\n  // and then we will concatenate a new object.\n  const useStyles = makeStyles(theme => ({\n    muipaper: {\n      /* root: { */\n\n      /*       background: theme.palette.background.paper, */\n      border: 0,\n      borderRadius: 3,\n\n      /* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n\n      /* color: 'white', */\n\n      /* height: 48, */\n\n      /*  padding: '0 30px', */\n\n      /*       height: , */\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      boxShadow: '0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0)'\n    }\n  }));\n  const classes = useStyles(); /// // works but eslint hates it ? /////\n\n  /*  const {...todos} = props.todos; */\n  /// Correct way ///\n\n  /*   const { todos, removeTodo } = props; */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.muipaper,\n    variant: \"outlined\",\n    square: true,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, todos.map((todo, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Todo, {\n    id: todo.id,\n    task: todo.task,\n    completed: todo.completed,\n    toggleTodo: toggleTodo,\n    editTodo: editTodo,\n    removeTodo: removeTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), i < todos.length - 1 && /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 40\n    }\n  }))))));\n  /* return null; */\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/TodoList.jsx"],"names":["React","Paper","List","Divider","makeStyles","Todo","TodoList","todos","removeTodo","toggleTodo","editTodo","useStyles","theme","muipaper","border","borderRadius","padding","spacing","textAlign","boxShadow","classes","map","todo","i","id","task","completed","length"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,KADgB;AACTC,EAAAA,UADS;AACGC,EAAAA,UADH;AACeC,EAAAA;AADf,CAAlB,EAEG;AACD;AACA;AAEA,QAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,IAAAA,QAAQ,EAAE;AACR;;AACA;AACAC,MAAAA,MAAM,EAAE,CAHA;AAIRC,MAAAA,YAAY,EAAE,CAJN;;AAKR;;AACA;;AACA;;AACA;;AACA;AACAC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAVD;AAWRC,MAAAA,SAAS,EAAE,QAXH;AAaRC,MAAAA,SAAS,EAAE;AAbH;AAD6B,GAAZ,CAAD,CAA5B;AAmBA,QAAMC,OAAO,GAAGT,SAAS,EAAzB,CAvBC,CAwBD;;AACA;AACA;;AACA;;AAEA,sBAEE,uDACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAES,OAAO,CAACP,QAA1B;AAAoC,IAAA,OAAO,EAAC,UAA5C;AAAuD,IAAA,MAAM,MAA7D;AAA8D,IAAA,SAAS,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT,uDACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,IAAA,IAAI,EAAEF,IAAI,CAACG,IAFb;AAGE,IAAA,SAAS,EAAEH,IAAI,CAACI,SAHlB;AAIE,IAAA,UAAU,EAAEjB,UAJd;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAME,IAAA,UAAU,EAAEF,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGe,CAAC,GAAGhB,KAAK,CAACoB,MAAN,GAAe,CAAnB,iBAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAT3B,CADD,CADH,CADF,CADF,CAFF;AAsBA;AACD;;AAED,eAAerB,QAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Todo from './Todos';\n\nfunction TodoList({\n  todos, removeTodo, toggleTodo, editTodo,\n}) {\n  // here we are overwriting everything in setTodos, we are going to pass in the existing todos\n  // and then we will concatenate a new object.\n\n  const useStyles = makeStyles((theme) => ({\n    muipaper: {\n      /* root: { */\n      /*       background: theme.palette.background.paper, */\n      border: 0,\n      borderRadius: 3,\n      /* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n      /* color: 'white', */\n      /* height: 48, */\n      /*  padding: '0 30px', */\n      /*       height: , */\n      padding: theme.spacing(2),\n      textAlign: 'center',\n\n      boxShadow: '0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0,0,0,0)',\n\n    },\n  }));\n\n  const classes = useStyles();\n  /// // works but eslint hates it ? /////\n  /*  const {...todos} = props.todos; */\n  /// Correct way ///\n  /*   const { todos, removeTodo } = props; */\n\n  return (\n\n    <>\n      <Paper className={classes.muipaper} variant=\"outlined\" square elevation={3}>\n        <List>\n          {todos.map((todo, i) => (\n            <>\n              <Todo\n                id={todo.id}\n                task={todo.task}\n                completed={todo.completed}\n                toggleTodo={toggleTodo}\n                editTodo={editTodo}\n                removeTodo={removeTodo}\n              />\n              {i < todos.length - 1 && <Divider />}\n            </>\n          ))}\n        </List>\n      </Paper>\n    </>\n  );\n  /* return null; */\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}