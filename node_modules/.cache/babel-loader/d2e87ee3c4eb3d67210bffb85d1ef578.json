{"ast":null,"code":"var _jsxFileName = \"/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/Todos.jsx\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { ListItemIcon } from '@material-ui/core';\nimport EditTodoForm from './TodoEditForm';\nimport useToggleState from './Hooks/useToggleState';\nexport default function Todo({\n  id,\n  task,\n  completed,\n  toggleTodo,\n  removeTodo,\n  editTodo\n}) {\n  /*   const [isToggled, toggleEdit] = useState(false);\n   const editToggle = () => {\n    const toggled = !isToggled;\n    toggleEdit(toggled);\n  };\n  */\n  const [isEditing, toggle] = useToggleState(false);\n  console.log(id);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, isEditing ? /*#__PURE__*/React.createElement(EditTodoForm, {\n    toggleEditForm: toggle,\n    id: id,\n    task: task,\n    editTodo: editTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: () => toggleTodo(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    style: {\n      textDecoration: completed ? 'line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, task, completed), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: () => removeTodo(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    onClick: () => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/Todos.jsx"],"names":["React","useState","useEffect","ListItem","ListItemText","Checkbox","IconButton","EditIcon","DeleteIcon","ListItemSecondaryAction","ListItemIcon","EditTodoForm","useToggleState","Todo","id","task","completed","toggleTodo","removeTodo","editTodo","isEditing","toggle","console","log","textDecoration"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,eAAe,SAASC,IAAT,CAAc;AAC3BC,EAAAA,EAD2B;AACvBC,EAAAA,IADuB;AACjBC,EAAAA,SADiB;AACNC,EAAAA,UADM;AACMC,EAAAA,UADN;AACkBC,EAAAA;AADlB,CAAd,EAEZ;AACD;;;;;;AAOA,QAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsBT,cAAc,CAAC,KAAD,CAA1C;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,SAAS,gBACR,oBAAC,YAAD;AACE,IAAA,cAAc,EAAEC,MADlB;AAEE,IAAA,EAAE,EAAEP,EAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,QAAQ,EAAEI,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAQR,uDACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,CAAC,CAArB;AAAwB,IAAA,OAAO,EAAEH,SAAjC;AAA4C,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACH,EAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEU,MAAAA,cAAc,EAAER,SAAS,GAAG,cAAH,GAAoB;AAA/C,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IADH,EAEGC,SAFH,CAFF,eAOE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAUE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAME,UAAU,CAACJ,EAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAME,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMO,MAAM,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CAVF,CATJ,CADF;AAmCD","sourcesContent":["/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { ListItemIcon } from '@material-ui/core';\nimport EditTodoForm from './TodoEditForm';\nimport useToggleState from './Hooks/useToggleState';\n\nexport default function Todo({\n  id, task, completed, toggleTodo, removeTodo, editTodo,\n}) {\n  /*   const [isToggled, toggleEdit] = useState(false);\n\n  const editToggle = () => {\n    const toggled = !isToggled;\n    toggleEdit(toggled);\n  };\n */\n  const [isEditing, toggle] = useToggleState(false);\n\n  console.log(id);\n  return (\n    <ListItem>\n      {isEditing ? (\n        <EditTodoForm\n          toggleEditForm={toggle}\n          id={id}\n          task={task}\n          editTodo={editTodo}\n        />\n      ) : (\n        <>\n          <Checkbox tabIndex={-1} checked={completed} onClick={() => toggleTodo(id)} />\n          <ListItemText style={{ textDecoration: completed ? 'line-through' : 'none' }}>\n            {task}\n            {completed}\n            {/* {id} */}\n          </ListItemText>\n          <ListItemText>\n            {/* {isToggled ? <EditTodoForm id={id} task={task} editTodo={editTodo} /> : ''} */}\n          </ListItemText>\n          <ListItemSecondaryAction>\n\n            <IconButton aria-label=\"Delete\">\n              <DeleteIcon onClick={() => removeTodo(id)} />\n            </IconButton>\n\n            <IconButton aria-label=\"Edit\">\n              {/*               <EditIcon onClick={() => editToggle()} /> */}\n              <EditIcon onClick={() => toggle()} />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}