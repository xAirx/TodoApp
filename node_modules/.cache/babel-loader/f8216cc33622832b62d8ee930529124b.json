{"ast":null,"code":"var _jsxFileName = \"/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/TodoEditForm.jsx\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n/* import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText'; */\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport useInputState from './Hooks/useInputState';\n\nfunction EditTodoForm({\n  id,\n  editTodo,\n  task,\n  toggleEditForm\n}) {\n  const [value, HandleChange, reset] = useInputState(task);\n  const [isError, setError] = useState(false);\n  const useStyles = makeStyles(theme => ({\n    textfield: {\n      textAlign: 'center',\n      width: '500px'\n    },\n    formpaper: {\n      /* root: { */\n\n      /*   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', */\n      border: 0,\n      borderRadius: 3,\n\n      /* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n\n      /* color: 'white', */\n\n      /* height: 48, */\n\n      /*  padding: '0 30px', */\n\n      /*       height: , */\n\n      /* padding: theme.spacing(2), */\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      margin: '1rem 0',\n      padding: '0 1rem'\n      /* } */\n\n    },\n    button: {\n      padding: '15px'\n    }\n  }));\n  /*   const CheckError = () => {\n    value === '' ? setError(true) : setError(false);\n    editTodo(id, value);\n  };\n  */\n\n  const classes = useStyles(); /// // works but eslint hates it ? /////\n\n  /*  const {...todos} = props.todos; */\n  /// Correct way ///\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.formpaper,\n    variant: \"outlined\",\n    square: true,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    Validate: true,\n    onSubmit: e => {\n      e.preventDefault(); // addtodo is passed from MUIAPP.jsx, we use it to set the new todo.\n\n      /*  CheckError(); */\n\n      editTodo(id, value);\n      reset();\n      toggleEditForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullwidth: true,\n    label: \"You are editing this todo\"\n    /*               required\n                  className={classes.textfield}\n              /* margin=\"normal\" */\n\n    /* label={task} */\n    ,\n    className: classes.textfield,\n    required: true,\n    value: value,\n    onChange: HandleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default EditTodoForm;","map":{"version":3,"sources":["/Users/marcowurtz/Documents/GitHub/GraphQLTodoApp/GraphQLTodoApp/src/TodoEditForm.jsx"],"names":["React","useState","Paper","Button","TextField","makeStyles","useInputState","EditTodoForm","id","editTodo","task","toggleEditForm","value","HandleChange","reset","isError","setError","useStyles","theme","textfield","textAlign","width","formpaper","border","borderRadius","color","palette","text","secondary","margin","padding","button","classes","e","preventDefault"],"mappings":";;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA;;;;;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAEA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,EADoB;AAChBC,EAAAA,QADgB;AACNC,EAAAA,IADM;AACAC,EAAAA;AADA,CAAtB,EAEG;AACD,QAAM,CAACC,KAAD,EAAQC,YAAR,EAAsBC,KAAtB,IAA+BR,aAAa,CAACI,IAAD,CAAlD;AACA,QAAM,CAACK,OAAD,EAAUC,QAAV,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMgB,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,QADF;AAETC,MAAAA,KAAK,EAAE;AAFE,KAD4B;AAKvCC,IAAAA,SAAS,EAAE;AACT;;AACA;AACAC,MAAAA,MAAM,EAAE,CAHC;AAITC,MAAAA,YAAY,EAAE,CAJL;;AAKT;;AACA;;AACA;;AACA;;AACA;;AACA;AACAJ,MAAAA,SAAS,EAAE,QAXF;AAYTK,MAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,SAZjB;AAaTC,MAAAA,MAAM,EAAE,QAbC;AAcTC,MAAAA,OAAO,EAAE;AAET;;AAhBS,KAL4B;AAuBvCC,IAAAA,MAAM,EAAE;AACND,MAAAA,OAAO,EAAE;AADH;AAvB+B,GAAZ,CAAD,CAA5B;AA4BA;;;;;;AAKA,QAAME,OAAO,GAAGf,SAAS,EAAzB,CArCC,CAsCD;;AACA;AACA;;AAEA,sBAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEe,OAAO,CAACV,SAA1B;AAAqC,IAAA,OAAO,EAAC,UAA7C;AAAwD,IAAA,MAAM,MAA9D;AAA+D,IAAA,SAAS,EAAE,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,QAAQ,EAAGW,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF,GADe,CAEf;;AACA;;AACAzB,MAAAA,QAAQ,CAACD,EAAD,EAAKI,KAAL,CAAR;AACAE,MAAAA,KAAK;AACLH,MAAAA,cAAc;AACf,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC;AAChB;;;;AAGU;AANF;AAOE,IAAA,SAAS,EAAEqB,OAAO,CAACb,SAPrB;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,KAAK,EAAEP,KATT;AAUE,IAAA,QAAQ,EAAEC,YAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAyBE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEmB,OAAO,CAACD,MAA3B;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,CADF,CAFF;AAkCD;;AAED,eAAexB,YAAf","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n/* import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText'; */\nimport { makeStyles } from '@material-ui/core/styles';\nimport useInputState from './Hooks/useInputState';\n\nfunction EditTodoForm({\n  id, editTodo, task, toggleEditForm,\n}) {\n  const [value, HandleChange, reset] = useInputState(task);\n  const [isError, setError] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    textfield: {\n      textAlign: 'center',\n      width: '500px',\n    },\n    formpaper: {\n      /* root: { */\n      /*   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', */\n      border: 0,\n      borderRadius: 3,\n      /* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n      /* color: 'white', */\n      /* height: 48, */\n      /*  padding: '0 30px', */\n      /*       height: , */\n      /* padding: theme.spacing(2), */\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      margin: '1rem 0',\n      padding: '0 1rem',\n\n      /* } */\n    },\n    button: {\n      padding: '15px',\n    },\n  }));\n\n  /*   const CheckError = () => {\n    value === '' ? setError(true) : setError(false);\n    editTodo(id, value);\n  };\n */\n  const classes = useStyles();\n  /// // works but eslint hates it ? /////\n  /*  const {...todos} = props.todos; */\n  /// Correct way ///\n\n  return (\n\n    <Paper className={classes.formpaper} variant=\"outlined\" square elevation={3}>\n      <form\n        Validate\n        onSubmit={(e) => {\n          e.preventDefault();\n          // addtodo is passed from MUIAPP.jsx, we use it to set the new todo.\n          /*  CheckError(); */\n          editTodo(id, value);\n          reset();\n          toggleEditForm();\n        }}\n      >\n\n        <TextField\n          fullwidth\n          label=\"You are editing this todo\"\n/*               required\n              className={classes.textfield}\n          /* margin=\"normal\" */\n          /* label={task} */\n          className={classes.textfield}\n          required\n          value={value}\n          onChange={HandleChange}\n        />\n        {/*  ) } */}\n        <Button className={classes.button} type=\"submit\">Submit</Button>\n      </form>\n\n    </Paper>\n\n  );\n}\n\nexport default EditTodoForm;\n"]},"metadata":{},"sourceType":"module"}