{"version":3,"sources":["serviceWorker.js","MUIthemeExample/ThemeWrapper.tsx","MUIthemeExample/myTheme.tsx","Hooks/useInputState.tsx","TodoEditForm.tsx","Hooks/useToggleState.tsx","Todos.tsx","TodoList.tsx","TodoForm.tsx","Hooks/useLocalStorageState.tsx","MUIthemeExample/MUIApp.tsx","Hooks/useTodoState.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","theme","body","text","ThemeWrapper","children","console","log","StylesProvider","injectFirst","CssBaseline","lightTheme","palette","primary","dark","light","main","secondary","type","background","paper","darkTheme","preferredTheme","matchMedia","matches","themeObject","useUpdate","initialVal","useState","state","setState","update","e","target","value","reset","EditTodoForm","id","editTodo","task","toggleEditForm","useInputState","HandleChange","classes","makeStyles","textfield","textAlign","width","formpaper","border","borderRadius","color","margin","padding","button","useStyles","Paper","className","variant","square","elevation","Validate","onSubmit","preventDefault","TextField","fullwidth","label","required","onChange","Button","useToggle","toggle","Todo","completed","toggleTodo","removeTodo","useToggleState","isEditing","ListItem","Checkbox","tabIndex","checked","onClick","ListItemText","style","textDecoration","ListItemSecondaryAction","IconButton","aria-label","TodoList","todos","muipaper","boxShadow","spacing","List","map","todo","i","length","Divider","Todoform","addTodo","marginBottom","marginTop","UseLocalStorageState","key","defaultVal","val","JSON","parse","localStorage","getItem","String","useEffect","setItem","stringify","MUIapp","setTheme","updatedTheme","useDarkmode","toggleDarkMode","themeConfig","createMuiTheme","root","flexGrow","menuButton","marginRight","toolbar","title","alignSelf","muipapermain","height","initialTodos","useLocalStorageState","setTodos","newTodoText","uuid","todoId","updatedTodos","filter","useTodoState","AppBar","position","Toolbar","edge","justify","Typography","noWrap","FormControlLabel","control","Switch","Grid","container","item","xs","md","lg","TodoForm","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dcc669cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n/* import PropTypes from 'prop-types';\n */\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { StylesProvider, CssBaseline, MuiThemeProvider } from '@material-ui/core';\n\nexport const GlobalStyle = createGlobalStyle`\n\t*,\n\t*::after,\n\t*::before {\n\t\tbox-sizing: border-box;\n\t}\n\n\tbody {\n\t\talign-items: center;\n\t\tfont-family: BlinkMacSystemFont, -apple-system, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n\t\t/*  background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text}; */\n\t\t/* display: flex;\n    flex-direction: column;\n    justify-content: center; */\n\t\theight: 100vh;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\ttransition: all 0.25s linear;\n\t}\n`;\n\nfunction ThemeWrapper({ children, theme }) {\n\tconsole.log('THIS IS THEME INSIDE THEMEWRAPPER', theme);\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<StylesProvider injectFirst>\n\t\t\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</MuiThemeProvider>\n\t\t\t\t</StylesProvider>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\nexport default ThemeWrapper;\n","/* eslint-disable no-unused-vars */\n\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport {\n\tblue, pink, purple, grey,\n} from '@material-ui/core/colors';\nimport useLocalStorageState from '../Hooks/useLocalStorageState';\n\n/*\nfunction myTheme(themeName = 'light') {\n */\n\n/* const themeObject = {\n\n  palette: {\n\tprimary: {\n\t  light: blue[800],\n\t  main: blue[500],\n\t  dark: blue[500],\n\t},\n\tsecondary: {\n\t  light: pink[800],\n\t  main: pink[500],\n\t  dark: pink[500],\n\t},\n\n  }\n}; */\n\nconst lightTheme = {\n\n\tpalette: {\n\t\tprimary: {\n\t\t\tdark: '#FFFFFF',\n\n\t\t\tlight: '#FFFFFF',\n\n\t\t\tmain: '#FFFFFF',\n\t\t},\n\t\tsecondary: {\n\t\t\tdark: '#FFFFFF',\n\n\t\t\tlight: '#FFFFFF',\n\n\t\t\tmain: '#FFFFFF',\n\t\t},\n\t\ttype: 'light',\n\t\tbackground: {\n\t\t\tpaper: 'linear-gradient(130deg, #96bb7c 80%, #184d47 10%)',\n\n\t\t},\n\t},\n};\n\nconst darkTheme = {\n\n\tpalette: {\n\t\tprimary: {\n\t\t\tdark: '#FFFFFF',\n\n\t\t\tlight: '#FFFFFF',\n\n\t\t\tmain: '#FFFFFF',\n\t\t},\n\t\tsecondary: {\n\t\t\tdark: '#FFFFFF',\n\n\t\t\tlight: '#FFFFFF',\n\n\t\t\tmain: '#FFFFFF',\n\t\t},\n\t\ttype: 'dark',\n\t\tbackground: {\n\t\t\tpaper: 'linear-gradient(130deg, #0c2623 80%, #96bb7c 10%)',\n\t\t},\n\t},\n};\n\nconst MatchMedia = window.matchMedia\n\t&& window.matchMedia('(prefers-color-scheme: dark)').matches;\n// console.log('MatchMEDIA: THE PREFFERED MODE IS DARK', MatchMedia);\n\nlet initialTheme = '';\nconst preferredTheme = MatchMedia === true ? initialTheme = darkTheme : initialTheme = lightTheme;\nconsole.log('this is the preferredTheme', preferredTheme);\n\nlet themeObject = preferredTheme;\nconsole.log('this is the ThemeObject', themeObject);\n\n/* {\n  PaletteType === 'light' ? (\n\tthemeObject = lightTheme\n  ) : (\n\tthemeObject = darkTheme\n  );\n}\n */\n/* console.log(themeObject); */\n/* themeConfig = responsiveFontSizes(themeConfig); */\n\nconst useDarkmode = () => {\n\tconst [theme, setTheme] = useState(themeObject);\n\n\tconsole.log('THIS IS INSIDE USEDARKMODE');\n\tconst toggleDarkMode = () => {\n\t\tconsole.log('You called  ToggleDarkMode');\n\t\tconsole.log('THIS IS THEME.TYPE', themeObject);\n\t\tconst updatedTheme = {\n\t\t\t...themeObject,\n\t\t\ttype: themeObject === darkTheme ? themeObject = lightTheme : themeObject = darkTheme,\n\t\t};\n\t\tsetTheme(updatedTheme);\n\t\tconsole.log('THIS IS THEME', theme);\n\t};\n\treturn [theme, toggleDarkMode];\n};\n\n/*    return theme;\n\t}\n\t*/\nexport { themeObject, useDarkmode };\n/*\n\nhttps://egghead.io/lessons/react-create-a-react-hook-to-toggle-between-light-and-dark-mode-inside-of-material-ui-themes */\n","import { useState } from 'react';\n\nfunction useUpdate(initialVal = 'testdata') {\n  // call useState, \"reserve a piece of state\";\n\n  const [state, setState] = useState(initialVal);\n\n  const update = (e) => {\n    setState(e.target.value);\n  };\n\n  /*  const change = () => {\n    setState('testxxx');\n  };\n */\n  const reset = () => {\n    setState('');\n  };\n\n  return [state, update, reset];\n}\n\nexport default useUpdate;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n/* import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText'; */\nimport { makeStyles } from '@material-ui/core/styles';\nimport useInputState from './Hooks/useInputState';\n\nfunction EditTodoForm({\n\tid, editTodo, task, toggleEditForm,\n}) {\n\tconst [value, HandleChange, reset] = useInputState(task);\n\tconst [isError, setError] = useState(false);\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\ttextfield: {\n\t\t\ttextAlign: 'center',\n\t\t\twidth: '500px',\n\t\t},\n\n\t\tformpaper: {\n\t\t\t/* root: { */\n\t\t\t/*   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', */\n\t\t\tborder: 0,\n\t\t\tborderRadius: 3,\n\t\t\tcolor: theme.palette.text.secondary,\n\t\t\tmargin: '1rem 0',\n\t\t\tpadding: '0 1rem',\n\t\t\t/* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n\t\t\t/* color: 'white', */\n\t\t\t/* height: 48, */\n\t\t\t/*  padding: '0 30px', */\n\t\t\t/*       height: , */\n\t\t\t/* padding: theme.spacing(2), */\n\t\t\ttextAlign: 'center'\n\n\t\t\t/* } */\n\t\t},\n\n\t\tbutton: {\n\t\t\tpadding: '15px',\n\t\t},\n\t}));\n\n\t/*   const CheckError = () => {\n\t  value === '' ? setError(true) : setError(false);\n\t  editTodo(id, value);\n\t};\n   */\n\tconst classes = useStyles();\n\t/// // works but eslint hates it ? /////\n\t/*  const {...todos} = props.todos; */\n\t/// Correct way ///\n\n\treturn (\n\n\t\t<Paper className={classes.formpaper} variant=\"outlined\" square elevation={3}>\n\t\t\t<form\n\t\t\t\tValidate\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// addtodo is passed from MUIAPP.jsx, we use it to set the new todo.\n\t\t\t\t\t/*  CheckError(); */\n\t\t\t\t\teditTodo(id, value);\n\t\t\t\t\treset();\n\t\t\t\t\ttoggleEditForm();\n\t\t\t\t}}\n\t\t\t>\n\n\t\t\t\t<TextField\n\t\t\t\t\tfullwidth\n\t\t\t\t\tlabel=\"You are editing this todo\"\n\t\t\t\t\t/*               required\n\t\t\t\t\t\t\t\t  className={classes.textfield}\n\t\t\t\t\t\t\t  /* margin=\"normal\" */\n\t\t\t\t\t/* label={task} */\n\t\t\t\t\tclassName={classes.textfield}\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={HandleChange}\n\t\t\t\t/>\n\t\t\t\t{/*  ) } */}\n\t\t\t\t<Button className={classes.button} type=\"submit\">Submit</Button>\n\t\t\t</form>\n\n\t\t</Paper>\n\n\t);\n}\n\nexport default EditTodoForm;\n","import { useState } from 'react';\n\nfunction useToggle(initialVal = false) {\n  // call useState, \"reserve a piece of state\";\n\n  const [state, setState] = useState(initialVal);\n  const toggle = () => {\n    setState(!state);\n  };\n\n  return [state, toggle];\n}\nexport default useToggle;\n","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { ListItemIcon } from '@material-ui/core';\nimport EditTodoForm from './TodoEditForm';\nimport useToggleState from './Hooks/useToggleState';\n\nexport default function Todo({\n\tid, task, completed, toggleTodo, removeTodo, editTodo,\n}) {\n\t/*   const [isToggled, toggleEdit] = useState(false);\n  \n\tconst editToggle = () => {\n\t  const toggled = !isToggled;\n\t  toggleEdit(toggled);\n\t};\n   */\n\tconst [isEditing, toggle] = useToggleState(false);\n\n\tconsole.log(id);\n\treturn (\n\t\t<ListItem>\n\t\t\t{isEditing ? (\n\t\t\t\t<EditTodoForm\n\t\t\t\t\ttoggleEditForm={toggle}\n\t\t\t\t\tid={id}\n\t\t\t\t\ttask={task}\n\t\t\t\t\teditTodo={editTodo}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Checkbox tabIndex={-1} checked={completed} onClick={() => toggleTodo(id)} />\n\t\t\t\t\t\t<ListItemText style={{ textDecoration: completed ? \"line-through\" : \"none\" }}>\n\t\t\t\t\t\t\t{task}\n\t\t\t\t\t\t\t{completed}\n\t\t\t\t\t\t\t{/* {id} */}\n\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t<ListItemText>\n\t\t\t\t\t\t\t{/* {isToggled ? <EditTodoForm id={id} task={task} editTodo={editTodo} /> : ''} */}\n\t\t\t\t\t\t</ListItemText>\n\t\t\t\t\t\t<ListItemSecondaryAction>\n\n\t\t\t\t\t\t\t<IconButton aria-label=\"Delete\">\n\t\t\t\t\t\t\t\t<DeleteIcon onClick={() => removeTodo(id)} />\n\t\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t\t<IconButton aria-label=\"Edit\">\n\t\t\t\t\t\t\t\t{/*               <EditIcon onClick={() => editToggle()} /> */}\n\t\t\t\t\t\t\t\t<EditIcon onClick={() => toggle()} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</ListItem>\n\t);\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Todo from './Todos';\n\nfunction TodoList({\n\ttodos, removeTodo, toggleTodo, editTodo,\n}) {\n\t// here we are overwriting everything in setTodos, we are going to pass in the existing todos\n\t// and then we will concatenate a new object.\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\tmuipaper: {\n\t\t\t/* root: { */\n\t\t\t/*       background: theme.palette.background.paper, */\n\t\t\tborder: 0,\n\t\t\tborderRadius: 3,\n\n\t\t\tboxShadow: '0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0, 0, 0, 0)',\n\t\t\t/* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n\t\t\t/* color: 'white', */\n\t\t\t/* height: 48, */\n\t\t\t/*  padding: '0 30px', */\n\t\t\t/*       height: , */\n\t\t\tpadding: theme.spacing(2),\n\t\t\ttextAlign: 'center',\n\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\t/// // works but eslint hates it ? /////\n\t/*  const {...todos} = props.todos; */\n\t/// Correct way ///\n\t/*   const { todos, removeTodo } = props; */\n\n\treturn (\n\n\t\t<>\n\t\t\t<Paper className={classes.muipaper} variant=\"outlined\" square elevation={3}>\n\t\t\t\t<List>\n\t\t\t\t\t{todos.map((todo, i) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Todo\n\t\t\t\t\t\t\t\tid={todo.id}\n\t\t\t\t\t\t\t\ttask={todo.task}\n\t\t\t\t\t\t\t\tcompleted={todo.completed}\n\t\t\t\t\t\t\t\ttoggleTodo={toggleTodo}\n\t\t\t\t\t\t\t\teditTodo={editTodo}\n\t\t\t\t\t\t\t\tremoveTodo={removeTodo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{i < todos.length - 1 && <Divider />}\n\t\t\t\t\t\t</>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Paper>\n\t\t</>\n\t);\n\t/* return null; */\n}\n\nexport default TodoList;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n/* import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText'; */\nimport { makeStyles } from '@material-ui/core/styles';\nimport useInputState from './Hooks/useInputState';\n\nfunction Todoform({ addTodo }) {\n\tconst [value, HandleChange, reset] = useInputState('');\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\ttextfield: {\n\t\t\ttextAlign: 'center',\n\t\t\twidth: '500px',\n\t\t},\n\n\t\tformpaper: {\n\n\t\t\t/* root: { */\n\t\t\t/*   background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', */\n\t\t\tborder: 0,\n\t\t\tborderRadius: 3,\n\t\t\tboxShadow: '0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0, 0, 0, 0)',\n\t\t\tcolor: theme.palette.text.secondary,\n\t\t\tmargin: '1rem 0',\n\t\t\tpadding: '0 1rem',\n\t\t\t/* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n\t\t\t/* color: 'white', */\n\t\t\t/* height: 48, */\n\t\t\t/*  padding: '0 30px', */\n\t\t\t/*       height: , */\n\t\t\t/* padding: theme.spacing(2), */\n\t\t\ttextAlign: 'center'\n\n\t\t\t/* } */\n\t\t},\n\n\t\tbutton: {\n\t\t\tmarginBottom: '25px',\n\t\t\tmarginTop: '10px',\n\t\t\tpadding: '15px',\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\t/// // works but eslint hates it ? /////\n\t/*  const {...todos} = props.todos; */\n\t/// Correct way ///\n\n\treturn (\n\n\t\t<Paper className={classes.formpaper} variant=\"outlined\" square elevation={3}>\n\t\t\t<form\n\t\t\t\tValidate\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// addtodo is passed from MUIAPP.jsx, we use it to set the new todo.\n\t\t\t\t\taddTodo(value);\n\t\t\t\t\treset();\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tfullwidth\n\t\t\t\t\t/*  label=\"Filled\" */\n\t\t\t\t\tlabel=\"Try it out and add a new todo!\"\n\t\t\t\t\tclassName={classes.textfield}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t/* label=\"Add New Todo\" */\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={HandleChange}\n\t\t\t\t/>\n\n\t\t\t\t<Button className={classes.button} type=\"submit\">Submit</Button>\n\t\t\t</form>\n\n\t\t</Paper>\n\n\t);\n}\n\nexport default Todoform;\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { useState, useEffect } from 'react';\n\n// if there is nothing in localStorage under the key we will use the defaultVal.\nfunction UseLocalStorageState(key, defaultVal) {\n  /*\nMake a piece of state but initialize it to some piece of local storage and\n by the way whenever it changes make sure you update local storage as well and then\n return that piece of state and a function to set\n\nthat piece of state. */\n\n  const [state, setState] = useState(() => {\n    let val;\n    try {\n      // See if there is something in localStorage with val...\n      val = JSON.parse(\n        window.localStorage.getItem(key) || String(defaultVal),\n      );\n    } catch (e) {\n      /// if there is nothing in localStorage set val to defaultVal\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n  return [state, setState];\n}\n/*\nThe last thing to do is return something from our hook so our hook needs\nto return both the state and\na way of setting that state.\n\nSo we'll just do return state and set state so from the other side of\n'things when we use this hook we\n\nwould just do something like this:\n\nconst [todos, setTodos] = useLocalStorageStatet(\"todos\", []):\n\nconcept to use comma set to DOS equals use local storage state of\nto do is never give it an initial value like an array.\n\nAnd from our end of things we would use this code used to dos and set to\nlose just like they came right\nback from use state.\n\nThe only change is that we intercepted it.\n\nWe base the value in the state the initial value based off of local\nstorage and we have this use effect\n\nthat is listening for a change on to dos and will automatically sync with local storage.\n */\n\nexport default UseLocalStorageState;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-unneeded-ternary */\n/* eslint-disable no-console */\n/* eslint-disable no-shadow */\n/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport '../css/style.css';\nimport {\n\tFormControlLabel, createMuiTheme, Switch,\n\tIconButton,\n} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n/* import SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport uuid from 'uuid/v4'; */\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport { ThemeWrapper, useDarkmode } from './index';\nimport TodoList from '../TodoList';\nimport TodoForm from '../TodoForm';\nimport useTodoState from '../Hooks/useTodoState';\nimport useLocalStorageState from '../Hooks/useLocalStorageState';\n\nexport default function MUIapp() {\n\t/*   Users might have specified a preference for a light or dark theme.\n\tThe method by which the user expresses their preference can vary.\n\tIt might be a system-wide setting exposed by the Operating System,\n\tor a setting controlled by the User Agent.\n\n\tYou can leverage this preference dynamically with the useMediaQuery\n\thook and the prefers-color-scheme media query.\n\n\tFor instance, you can enable the dark mode automatically: */\n\n\tconst [theme, toggleDarkMode] = useDarkmode();\n\tconsole.log('THIS IS THEME INSIDE APP', theme);\n\n\tconst themeConfig = createMuiTheme(theme);\n\n\tconst useStyles = makeStyles(() => ({\n\t\troot: {\n\t\t\tflexGrow: 1,\n\t\t},\n\n\t\tmenuButton: {\n\t\t\tmarginRight: themeConfig.spacing(2),\n\t\t},\n\n\t\ttoolbar: {\n\t\t\t/*  minHeight: 128, */\n\t\t\t/* alignItems: 'flex-center', */\n\t\t\t/*  paddingTop: themeConfig.spacing(1), */\n\t\t\t/* paddingBottom: themeConfig.spacing(3), */\n\t\t\tbackground: themeConfig.palette.background.paper,\n\t\t\tboxShadow: '0px 10px 13px -7px #000000, 5px 5px 15px 5px rgba(0, 0, 0, 0)',\n\n\t\t},\n\n\t\ttitle: {\n\t\t\talignSelf: 'center',\n\t\t\tflexGrow: 1,\n\t\t},\n\n\t\tmuipapermain: {\n\n\t\t\tbackground: themeConfig.palette.background.paper,\n\t\t\t/* root: { */\n\t\t\t/* background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)', */\n\t\t\tborder: 0,\n\t\t\tborderRadius: 3,\n\t\t\t/* boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)', */\n\t\t\t/* color: 'white', */\n\t\t\t/* height: 48, */\n\t\t\t/*  padding: '0 30px', */\n\t\t\theight: '100vh',\n\t\t\tpadding: themeConfig.spacing(2),\n\t\t\ttextAlign: 'center'\n\t\t\t/* } */\n\t\t},\n\t}));\n\n\tconst classes = useStyles();\n\t/// /////\n\t/// /////\n\t/// /////\n\t/// /////\n\t/// /////\n\t/// /////\n\t/// /////\n\t/// /////\n\n\t/* Now if we had another piece of state that we wanted distinct to local storage whenever it changed we\n  would need to duplicate this code duplicate this code:\n\n\t// This required us to return null inside todolist else react will crash because TODOS isnt containing anything.\n\t/*   const initialTodos = JSON.parse(window.localStorage.getItem('todos')) || [\"\"];\n\n\t/* Instead we could make a new hook a custom hook called use local storage state.\n\n  And all we would do is pass in something like this.\n\n\t/// /////\n\t/// /////\n  const [todos] = useLocalStorageState(\"todos\", []);\n\t/// /////\n\t/// /////\n\n  Use local storage state.\n  We would give it a key.\n  So in our case to dos and then a default value and we could pass in an array instead of the string of\n  an array.\n\n  So we pass in an array and then it's going to return to dos just like we have now.\n  Something like that and maybe set to dos and then anytime we change to dos it will automatically sync\n  to local storage.\n\n  So that way we can move this code out move this code out.\n  But also if we wanted to save anything to local storage and have it update or sync anytime that piece\n  of State changed we could use that in this application in another application.\n\n  It's a pretty common use case.\n  So if we wanted to add in a dark mode or a light mode or a language preference like if a user could\n  specify French instead of English we might want to store that in local storage but that doesn't really\n  belong with the to dos in that array. You'd need a separate piece of state a separate piece of local storage so it would be best to use a\n\n  custom hook. as seen below: useLocalStorageState.\n   */\n\n\t/// /////\n\t/// /////\n\n\tconst initialTodos = [{ id: 1, task: 'Get started writing your own todos here!', completed: false }];\n\n\t/*   = JSON.parse(window.localStorage.getItem('todos')) || [{ id: 1, task: 'Get started writing your own todos here!', completed: false }];\n   */\n\n\t// We can easily set and initialize our state and localstorage like this:\n\t/*   const [mood, setMood] = useLocalStorageState('mood', 'happy');\n\tconsole.log(mood); */\n\n\tconst {\n\t\ttodos, addTodo, removeTodo, toggleTodo, editTodo,\n\t} = useTodoState(initialTodos);\n\t/// /////\n\t/// /////\n\n\t/*   const initialTodos = [\n\t  { id: 1, task: 'Buy Cucumber', completed: false },\n\t  { id: 2, task: 'Buy Eggs', completed: true },\n\t  { id: 3, task: 'Buy Bread', completed: false },\n\t];\n   */\n\n\treturn (\n\t\t<ThemeWrapper theme={themeConfig}>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar position=\"static\" color=\"transparent\">\n\t\t\t\t\t<Toolbar className={classes.toolbar}>\n\n\t\t\t\t\t\t{/*     <IconButton aria-label=\"search\" color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n            <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\n              <MoreVertIcon />\n            </IconButton> */}\n\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"light and dark mode toggle\"\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginRight: '20px',\n\t\t\t\t\t\t\t\t\tmarginTop: '6px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{themeConfig.palette.type === 'dark'\n\t\t\t\t\t\t\t\t\t? <Brightness4Icon variant=\"outlined\" />\n\t\t\t\t\t\t\t\t\t: <Brightness7Icon />}\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tchecked={themeConfig.palette.type === 'dark'}\n\t\t\t\t\t\t\t\tcontrol={<Switch onClick={toggleDarkMode} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Paper\n\t\t\t\t\tclassName={classes.muipapermain}\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsquare\n\t\t\t\t\televation={3}\n\t\t\t\t>\n\t\t\t\t\t<Grid container justify=\"center\" style={{ marginTop: '1rem' }}>\n\t\t\t\t\t\t<Grid item xs={11} md={8} lg={4}>\n\t\t\t\t\t\t\t<TodoList\n\t\t\t\t\t\t\t\ttodos={todos}\n\t\t\t\t\t\t\t\tremoveTodo={removeTodo}\n\t\t\t\t\t\t\t\ttoggleTodo={toggleTodo}\n\t\t\t\t\t\t\t\teditTodo={editTodo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TodoForm addTodo={addTodo} />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/*             <button onClick={() => setMood('angry')}>Click to get angry and test localStorage</button>\n */}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Paper>\n\n\t\t\t</div>\n\t\t</ThemeWrapper>\n\t);\n}\n","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n\nimport { useState } from 'react';\nimport uuid from 'uuid/v4';\nimport useLocalStorageState from './useLocalStorageState';\n\nexport default (initialTodos) => {\n\t// UselocalStorage state will initialize the state and make the state for us.\n\t// Bsed off of localstorage. we are using useLocalStorageState to make sure to handle the\n\t// Localstorage functionality here.\n\tconst [todos, setTodos] = useLocalStorageState('todos', initialTodos);\n\n\tconsole.log('THESE ARE THE TODOS INSIDE USETODOSTATE HOOK', todos);\n\n\treturn {\n\t\ttodos,\n\n\t\taddTodo: (newTodoText) => {\n\t\t\tsetTodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\n\t\t},\n\t\tremoveTodo: (todoId) => {\n\t\t\tconsole.log('removetodocalled');\n\t\t\t// filter out removed todo\n\t\t\tconst updatedTodos = todos.filter((todo) => todo.id !== todoId);\n\t\t\tconsole.log(updatedTodos);\n\t\t\t// call setTodos with new todosArray\n\t\t\tsetTodos(updatedTodos);\n\t\t\t/* console.log('These are the updated todos', todos); */\n\t\t},\n\t\teditTodo: (todoId, newTodoText) => {\n\t\t\tconsole.log('editTodoCalled');\n\t\t\t// filter out removed todo\n\t\t\t/*  const updatedTodos = todos.filter((todo) => todo.id === todoId);\n\t\t\t   /*  console.log(updatedTodos); */\n\t\t\t/*  updatedTodos.task = newTodoText; */\n\t\t\t// call setTodos with new todosArray\n\t\t\tconst updatedTodos = todos.map((todo) => (todo.id === todoId\n\t\t\t\t? { ...todo, task: newTodoText } : todo));\n\t\t\tconsole.log('this is the new todos changed from edit', updatedTodos);\n\t\t\tsetTodos(updatedTodos);\n\t\t\t/* console.log('These are the updated todos', todos); */\n\t\t},\n\n\t\ttoggleTodo: (todoId) => {\n\t\t\tconst updatedTodos = todos.map((todo) => (todo.id === todoId ? {\n\t\t\t\t...todo,\n\t\t\t\tcompleted: !todo.completed,\n\t\t\t} : todo));\n\t\t\tsetTodos(updatedTodos);\n\t\t},\n\n\t};\n};\n\n/* const addTodo = (newTodoText) => {\n  setTodos([...todos, { id: uuid(), task: newTodoText, completed: false }]);\n}; */\n\n/// /////\n/// /////\n\n/* const removeTodo = (todoId) => {\n  console.log('removetodocalled');\n   filter out removed todo\n  const updatedTodos = todos.filter((todo) => todo.id !== todoId);\n  console.log(updatedTodos);\n   call setTodos with new todosArray\n  setTodos(updatedTodos);\n  console.log('These are the updated todos', todos);\n};\n */\n/// /////\n/// /////\n\n/* const editTodo = (todoId, newTodoText) => {\n   console.log('editTodoCalled');\n   filter out removed todo\n   const updatedTodos = todos.filter((todo) => todo.id === todoId);\n   console.log(updatedTodos);\n   updatedTodos.task = newTodoText;\n   call setTodos with new todosArray\n  const updatedTodos = todos.map((todo) => (todo.id === todoId ? { ...todo, task: newTodoText } : todo));\n  console.log('this is the new todos changed from edit', updatedTodos);\n  setTodos(updatedTodos);\n  console.log('These are the updated todos', todos);\n};\n */\n\n/* const toggleTodo = (todoId) => {\n\tconst updatedTodos = todos.map((todo) => (todo.id === todoId ? {\n\t  ...todo,\n\t  completed: !todo.completed,\n\t} : todo));\n\tsetTodos(updatedTodos);\n  };\n */\n","/* eslint-disable no-unused-vars */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MUIApp from './MUIthemeExample/MUIApp';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t{/*     <VanillaThemingApp /> */}\n\t\t<MUIApp />\n\t\t{/* <StyledThemingApp/> */}\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWAxxxx\nserviceWorker.unregister();\n"],"sourceRoot":""}