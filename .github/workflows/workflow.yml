name: Push Container to Heroku

on:
  push:
    branches:
      - development
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development')
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      SKIP_PREFLIGHT_CHECK : true

    steps:
      - uses: actions/checkout@v1
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Install Dependencies - yarn install
        run: yarn install
      - name: Unit tests - yarn test
        run: yarn test

      - name: Set Dev Environment
        if: github.ref == 'refs/heads/development'
        uses: allenevans/set-env@v1.0.0
        with:
          ENVIRONMENT: "dev"
          BRANCH: "development"

      - name: Printdevenv
        if: github.ref == 'refs/heads/development'
        run: |
          echo "ENVIRONMENT=${ENVIRONMENT}"
          printenv
      - name: Printdevbranchenv
        if: github.ref == 'refs/heads/development'
        run: |
          echo "BRANCH=${BRANCH}"
          printenv
      - name: Set Production Environment
        if: github.ref == 'refs/heads/master'
        uses: allenevans/set-env@v1.0.0
        with:
          ENVIRONMENT: "master"
          BRANCH: "master"

      - name: Printproductionenv
        if: github.ref == 'refs/heads/master'
        run: |
          echo "ENVIRONMENT=${ENVIRONMENT}"
          printenv
      - name: Printprodbranchenv
        if: github.ref == 'refs/heads/master'
        run: |
          echo "BRANCH=${BRANCH}"
          printenv
      - name: Push to Heroku

        run: git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/todoapp--$ENVIRONMENT.git origin/$BRANCH:master
